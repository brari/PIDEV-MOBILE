package com.mycompany.myapp;


import com.codename1.components.ImageViewer;
import com.codename1.components.ScaleImageLabel;
import com.codename1.io.CharArrayReader;
import com.codename1.io.ConnectionRequest;
import com.codename1.io.JSONParser;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.io.NetworkManager;
import com.codename1.media.Media;
import com.codename1.media.MediaManager;
import com.codename1.ui.Button;
import com.codename1.ui.Component;
import static com.codename1.ui.Component.CENTER;
import static com.codename1.ui.Component.LEFT;
import static com.codename1.ui.Component.RIGHT;
import com.codename1.ui.Container;
import com.codename1.ui.EncodedImage;
import com.codename1.ui.FontImage;
import com.codename1.ui.Image;
import com.codename1.ui.TextField;
import com.codename1.ui.URLImage;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.layouts.LayeredLayout;
import com.codename1.ui.layouts.Layout;
import com.codename1.ui.plaf.Style;
import java.util.Map;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;
    
            
    private   Container mainContainer;
    private Form home;
    private Form test;
    EncodedImage im;
    Image img;
    ImageViewer imgv;
    String url="http://localhost/AnnuaireWeb(1)/AnnuaireWeb/web/Evenement/image/cc.jpg";
     private  Label title ;
    private   Container  ctnAccueil ;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
  public void start() {
         if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("♥ Login ♥", new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER_ABSOLUTE));
        
        
     title = new Label("Bienvenue");
     title.setAlignment(CENTER);
     ctnAccueil = new Container() ;
     ctnAccueil.add(title);
      try {
            im=EncodedImage.create("/patiss.jpg");
        } catch (IOException ex) {
            //Logger.getLogger(MyApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
        img=URLImage.createToStorage(im, "img3", url, URLImage.RESIZE_SCALE);
        imgv= new ImageViewer(img);//img de type image
      
        ctnAccueil.add(imgv);
     
    Style s = UIManager.getInstance().getComponentStyle("MultiLine1");
    FontImage p = FontImage.createMaterial(FontImage.MATERIAL_PORTRAIT, s);
    EncodedImage placeholder = EncodedImage.createFromImage(p.scaled(p.getWidth() * 2, p.getHeight() * 2), false);
    
    
    
    
        
        
        Button Connect = new Button("Login");
        TextField login = new TextField("", "Login");
        TextField password = new TextField("", "Password", 20, TextField.PASSWORD);
          
        hi.addComponent(BorderLayout.CENTER, 
                LayeredLayout.encloseIn(
                        BoxLayout.encloseY(
                                login,password,
                              Connect
                                
                        )
                        )
                    
        );
        
        Connect.addActionListener((e) -> {
           // new ListProduits().start();
//  new ListProduits().start();
       // new  ListProduits().start();
      // new Stat().start();
           // new  BudgetPieChart().execute();

            if (login.getText().equals("zahra")&&password.getText().equals("zahra")) {
                new ListEvenements().start();
                 Media video = null;
        try {
             video = MediaManager.createMedia("src\\music\\azzz.mp3", true);
        } catch (IOException ex) {
        }
                    
                    video.play();
            }
            
            else if(login.getText().equals("hend")&&password.getText().equals("hend"))
            { 
                new ListEvenementsClient().start();
                
            }
            
            /*
            else if (login.getText().equals("Produit")&&password.getText().equals("Produit")) {
               Dialog.show("Product","produit espace","ok",null);
            }
            */
            else{
               Dialog.show("Warning","Verifiez votre coordonnées","ok",null);
                Media video = null;
        try {
             video = MediaManager.createMedia("src\\music\\azzz.mp3", true);
        } catch (IOException ex) {
        }
                    
                    video.play();
            }
            
      
        });
       
        hi.show();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}