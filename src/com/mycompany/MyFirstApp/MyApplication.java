package com.mycompany.MyFirstApp;


import com.codename1.components.SpanLabel;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.Tabs;
import com.codename1.ui.TextArea;
import com.codename1.ui.TextField;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.CoordinateLayout;
import com.codename1.ui.layouts.Layout;
import com.mycompany.entities.reclamation;
import com.mycompany.services.ReclamationService;
import com.mycompany.ui.HomeForm;
import javafx.scene.control.Tab;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    public static Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            }
      //  AffichageReclamationForm form = new AffichageReclamationForm();
      // form.getAffRec().show();
        //HomeForm hf = new HomeForm();
      // hf.getF().show();
            LoginInForm form = new LoginInForm(theme);
            form.show();
                    
        /*Form formLogin = new Form();
        CoordinateLayout layout = new CoordinateLayout(formLogin.getWidth(),formLogin.getHeight());
        formLogin.setLayout(layout);
        Label username = new Label("Username : ");
        username.setY(80);
        Label password = new Label("Password : ");
        password.setY(300);
        TextField usernam = new TextField();
        usernam.setMaxSize(50);
        usernam.setY(200);
        usernam.setX(20);
        TextField passwor = new TextField();
        passwor.setY(400);
       passwor.setX(20);
         Button connecter = new Button("Connecter");
         connecter.setY(600);
         connecter.setX(400);
        Button inscrire = new Button("S'inscrire");
         inscrire.setY(700);
         inscrire.setX(400);
        passwor.setConstraint(TextArea.PASSWORD);
        formLogin.add(usernam);
        formLogin.add(username);
        formLogin.add(passwor);
        formLogin.add(password);
        formLogin.add(connecter);
        formLogin.add(inscrire);
        formLogin.show();*/
        
      /* Form hi = new Form("Formulaire Reclamation", BoxLayout.y());
       
              
        TextArea t3 = new TextArea();
        t3.setHint("saisir votre objet");
        TextArea t4 = new TextArea();
        t3.setHint("saisir votre description");
        Label l1 = new Label("description : ");
        Label l2 = new Label("objet :");
        l1.setX(20);
        t3.setX(40);
        l2.setX(60);
        t4.setX(80);
        hi.add(l1);
       hi.add(t3);
        hi.add(l2);
       hi.add(t4);
     SpanLabel lb = new SpanLabel("");
        hi.add(lb);
        ReclamationService servicer = new ReclamationService();
        lb.setText(servicer.afficherRec().toString());
          hi.getToolbar().addCommandToRightBar("back", null, (ev)->{HomeForm h=new HomeForm();
          h.getF().show();
          });
      //  hi.add(l1);
       // hi.add(t3);
       // hi.add(l2);
        //hi.add(t4);
        Button b = new Button("envoyer");
        hi.add(b);
        hi.show();
       // Dialog d = new Dialog("first dialog");
        //d.setDialogType(Dialog.TYPE_ERROR);
       // d.show();
        //Tabs T = new Tabs(Tabs.TOP);
        //T.show();
        // Dialog.show("error", "please confirm your password ", "cancel", "ok");
         */
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
