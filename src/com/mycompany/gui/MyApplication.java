package com.mycompany.gui;


import com.codename1.components.ImageViewer;
import com.codename1.components.SpanLabel;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.FontImage;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.mycompany.gui.AffichageProduit;
import com.mycompany.gui.AfficherCommande;
import com.mycompany.gui.AjouterProduit;
import com.mycompany.gui.Fav;
import com.mycompany.gui.Stat;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;
    Form h3;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
         h3 = new Form("Le Coin Patissier", BoxLayout.y());
     ImageViewer im=new ImageViewer();
        im.setImage(theme.getImage("photo.jpg"));
          
        h3.add(im);
SpanLabel t1= new SpanLabel ("'    Bienvenue dans notre Coin Patissier    '");

        h3.add(t1);
      
       SpanLabel t11= new SpanLabel ("'     A la rencontre de vos saveurs        '");
        h3.add(t11);
         ImageViewer imaq=new ImageViewer();
        imaq.setImage(theme.getImage("contact.jpg"));
          
        h3.add(imaq);
         ImageViewer im1=new ImageViewer();
        im1.setImage(theme.getImage("1.jpg"));
          
        h3.add(im1);
         ImageViewer ima=new ImageViewer();
        ima.setImage(theme.getImage("2.jpg"));
          
        h3.add(ima);
        ImageViewer imaa=new ImageViewer();
        imaa.setImage(theme.getImage("3.jpg"));
          
        h3.add(imaa);
        ImageViewer imaz=new ImageViewer();
        imaz.setImage(theme.getImage("4.jpg"));
         
        h3.add(imaz);
       
//        ImageViewer imar=new ImageViewer();
//        imar.setImage(theme.getImage("image.jpg"));
//          
//        h3.add(imar);
        
         Toolbar tb2=h3.getToolbar();
         tb2.addMaterialCommandToLeftSideMenu("About", FontImage.MATERIAL_SETTINGS, new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent evt){
           // h3.show();
        }
        });
           tb2.addMaterialCommandToLeftSideMenu("Ajouter Produit", FontImage.MATERIAL_SETTINGS, new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent evt){
           AjouterProduit h = new AjouterProduit();
   h.getF().show();
        }
        });
             tb2.addMaterialCommandToLeftSideMenu("Afficher Produit", FontImage.MATERIAL_SETTINGS, new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent evt){
            AffichageProduit a=new AffichageProduit();
        a.getF().show();
        }
        });
               tb2.addMaterialCommandToLeftSideMenu("Afficher Commande", FontImage.MATERIAL_SETTINGS, new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent evt){
           AfficherCommande a=new AfficherCommande();
        a.getF().show();
        }
        });
        
                       tb2.addMaterialCommandToLeftSideMenu("Afficher Favoris", FontImage.MATERIAL_SETTINGS, new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent evt){
              Fav a=new Fav();
        a.getH1().show();
        }
        });
                          tb2.addMaterialCommandToLeftSideMenu("Afficher Statistiques", FontImage.MATERIAL_SETTINGS, new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent evt){
             Stat a=new Stat();
        a.getF().show();
        }
                          });
        h3.show();
//      AjouterProduit h = new AjouterProduit();
//        h.getF().show();
     h3.show();
   
    }
       public Form getH3() {
        return h3;
    }

    public Form getCurrent() {
        return current;
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
